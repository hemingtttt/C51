#####头文件
//Delay.h
#ifndef __DELAY_H_
#define __DELAY_H_
void Delay(unsigned int xms);
#endif

//Key.h
#ifndef __KEY_H_
#define __KEY_H_
usigned char Key();
#endif

//Timer0.h
#ifndef __TIMER0_H_
#define __TIMER0_H_
void Timer0_Init();
#endif


#####函数
//Delay.c
//Function Definition
/**
  * @brief 延迟函数
  * @param  无
  * @retval 1ms
  */
void Delay(unsigned int xms)		//@11.0592MHz
{
	unsigned char i, j;
	while(xms)
	{
		i = 2;
		j = 199;
		do
		{
			while (--j);
		} while (--i);	
		xms--;
	}
} 
	
//Key.c
#include <REGX52.H>
#include "Delay.h"

//Function Definition
/**
  * @brief 获取独立按键键码
  * @param  无
  * @retval 按下按键的键码，范围0~4，无按键按下的返回值为0
  */

unsigned char Key()
{
	unsigned char KeyNum=0;
	
	if(P2_1==0) {Delay(20);while(P2_1==0);Delay(20);KeyNum=1;}
	if(P2_0==0) {Delay(20);while(P2_0==0);Delay(20);KeyNum=2;}
	if(P2_3==0) {Delay(20);while(P2_3==0);Delay(20);KeyNum=3;}
	if(P2_4==0) {Delay(20);while(P2_4==0);Delay(20);KeyNum=4;}
	
	return KeyNum;
}

//Timer0.c
#include <REGX52.H>

//Function Definition
/**
  * @brief 定时器0初始化
  * @param  无
  * @retval 1ms
  */
void Timer0_Init()	//1毫秒@12.000MHz	
{
	TMOD &= 0xF0;	//设置定时器模式	
	TMOD |= 0x01;	//设置定时器模式	
	TL0 = 0x66;		//设置定时初值
	TH0 = 0xFC;		//设置定时初值
	TF0 = 0;        //清除TF0标志 
	TR0 = 1;		//定时器0开始计时
	
	ET0=1;
	EA=1;
	PT0=0;
}


#####方法一：定时+轮询（控制灯）
//mian.c (测试) 按键控制灯亮
#include <REGX52.H>
#include "Timer0.h"
#include "Key.h"

unsigned char KeyNum;

void main()
{
    Timer0_Init(); //定时器0初始化
	while(1)
	{
		KeyNum=Key();
		if (KeyNum)
		{
			if(KeyNum==1) P2_0=~P2_0; //按K1，led1亮，再按一次则熄灭
			if(KeyNum==2) P2_1=~P2_1;
			if(KeyNum==3) P2_2=~P2_2;
			if(KeyNum==4) P2_3=~P2_3;
		}
	}
}





//main.c  流水灯，按下K1改变方向
#include <REGX52.H>
#include "Timer0.h"
#include "Key.h"
#include "INTRINS.H"

unsigned char KeyNum,LEDMode;

void main()
{
	P2=0xFE;
    Timer0_Init(); //定时器0初始化
	while(1)
	{
		KeyNum=Key();
		if (KeyNum)
		{
			if(KeyNum==1) //按下K1，改变方向
			{
				LEDMode++;
				if(LEDMode>=2) LEDMode=0;
			}
			
		}
	}
}

void Timer0_Routine() interrupt 1
{
    static unsigned int T0Count;
	TL0 = 0x18; //重新赋值1us
	TH0 = 0xFC;
	T0Count++;
	if (T0Count>=500) //0.5s
	{
		  T0Count=0;
		  if(LEDMode==0)
			  P2=_crol_(P2,1);  //向左移位，并且循环
		  if(LEDMode==1)
			  P2=_cror_(P2,1);  //向右移位，并且循环
	}
}





